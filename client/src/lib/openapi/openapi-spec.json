{
  "openapi": "3.1.0",
  "info": { "title": "Procrasti-Not(e) API", "version": "0.1.0" },
  "servers": [{ "url": "/api" }],
  "paths": {
    "/user": {
      "get": {
        "tags": ["user"],
        "summary": "Get User",
        "operationId": "get_user_user_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/User" }
              }
            }
          }
        }
      },
      "put": {
        "tags": ["user"],
        "summary": "Update User",
        "operationId": "update_user_user_put",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/UserUpdate" }
            }
          },
          "required": true
        },
        "responses": {
          "204": { "description": "Successful Response" },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["user"],
        "summary": "Create User",
        "operationId": "create_user_user_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/UserCreate" }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": {} } }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/user/change-password": {
      "put": {
        "tags": ["user"],
        "summary": "Change Password",
        "operationId": "change_password_user_change_password_put",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/UserUpdatePassword" }
            }
          },
          "required": true
        },
        "responses": {
          "204": { "description": "Successful Response" },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/auth/token": {
      "post": {
        "tags": ["auth"],
        "summary": "Login For Access Token",
        "operationId": "login_for_access_token_auth_token_post",
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/Body_login_for_access_token_auth_token_post"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Token" }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/notes": {
      "get": {
        "tags": ["notes"],
        "summary": "Get All Notes",
        "operationId": "get_all_notes_notes_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": { "$ref": "#/components/schemas/Note" },
                  "type": "array",
                  "title": "Response Get All Notes Notes Get"
                }
              }
            }
          }
        }
      }
    },
    "/note/{note_id}": {
      "get": {
        "tags": ["notes"],
        "summary": "Get One Note",
        "operationId": "get_one_note_note__note_id__get",
        "parameters": [
          {
            "name": "note_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "exclusiveMinimum": 0,
              "title": "Note Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Note" }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      },
      "put": {
        "tags": ["notes"],
        "summary": "Update Note",
        "operationId": "update_note_note__note_id__put",
        "parameters": [
          {
            "name": "note_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "exclusiveMinimum": 0,
              "title": "Note Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/NoteUpdate" }
            }
          }
        },
        "responses": {
          "204": { "description": "Successful Response" },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["notes"],
        "summary": "Delete One Note",
        "operationId": "delete_one_note_note__note_id__delete",
        "parameters": [
          {
            "name": "note_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "exclusiveMinimum": 0,
              "title": "Note Id"
            }
          }
        ],
        "responses": {
          "204": { "description": "Successful Response" },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/note": {
      "post": {
        "tags": ["notes"],
        "summary": "Create Note",
        "operationId": "create_note_note_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/NoteCreate" }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": {} } }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/admin/notes": {
      "get": {
        "tags": ["admin"],
        "summary": "Get All Notes",
        "operationId": "get_all_notes_admin_notes_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": { "$ref": "#/components/schemas/Note" },
                  "type": "array",
                  "title": "Response Get All Notes Admin Notes Get"
                }
              }
            }
          }
        },
        "security": [{ "OAuth2PasswordBearer": [] }]
      }
    },
    "/admin/note/{note_id}": {
      "delete": {
        "tags": ["admin"],
        "summary": "Delete One Note",
        "operationId": "delete_one_note_admin_note__note_id__delete",
        "security": [{ "OAuth2PasswordBearer": [] }],
        "parameters": [
          {
            "name": "note_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "exclusiveMinimum": 0,
              "title": "Note Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": {} } }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/": {
      "get": {
        "summary": "Root",
        "operationId": "root__get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": {} } }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Body_login_for_access_token_auth_token_post": {
        "properties": {
          "grant_type": {
            "anyOf": [
              { "type": "string", "pattern": "password" },
              { "type": "null" }
            ],
            "title": "Grant Type"
          },
          "username": { "type": "string", "title": "Username" },
          "password": { "type": "string", "title": "Password" },
          "scope": { "type": "string", "title": "Scope", "default": "" },
          "client_id": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Client Id"
          },
          "client_secret": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Client Secret"
          }
        },
        "type": "object",
        "required": ["username", "password"],
        "title": "Body_login_for_access_token_auth_token_post"
      },
      "HTTPValidationError": {
        "properties": {
          "detail": {
            "items": { "$ref": "#/components/schemas/ValidationError" },
            "type": "array",
            "title": "Detail"
          }
        },
        "type": "object",
        "title": "HTTPValidationError"
      },
      "Note": {
        "properties": {
          "title": { "type": "string", "title": "Title" },
          "content": { "type": "string", "title": "Content" },
          "priority": { "type": "integer", "title": "Priority" },
          "id": { "type": "integer", "title": "Id" },
          "complete": { "type": "boolean", "title": "Complete" },
          "author_id": { "type": "integer", "title": "Author Id" },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          }
        },
        "type": "object",
        "required": [
          "title",
          "content",
          "priority",
          "id",
          "complete",
          "author_id",
          "created_at"
        ],
        "title": "Note",
        "example": {
          "author_id": 1,
          "complete": false,
          "content": "Learn Python programming language and its libraries.",
          "created_at": "2024-03-10T18:33:02.306629",
          "id": 1,
          "priority": 3,
          "title": "Learn Python"
        }
      },
      "NoteCreate": {
        "properties": {
          "title": { "type": "string", "minLength": 1, "title": "Title" },
          "content": {
            "type": "string",
            "maxLength": 100,
            "minLength": 1,
            "title": "Content"
          },
          "priority": {
            "type": "integer",
            "maximum": 5.0,
            "minimum": 1.0,
            "title": "Priority"
          }
        },
        "type": "object",
        "required": ["title", "content", "priority"],
        "title": "NoteCreate",
        "example": {
          "content": "Learn Python programming language and its libraries.",
          "priority": 3,
          "title": "Learn Python"
        }
      },
      "NoteUpdate": {
        "properties": {
          "title": { "type": "string", "minLength": 1, "title": "Title" },
          "content": {
            "type": "string",
            "maxLength": 100,
            "minLength": 1,
            "title": "Content"
          },
          "priority": {
            "type": "integer",
            "maximum": 5.0,
            "minimum": 1.0,
            "title": "Priority"
          },
          "complete": { "type": "boolean", "title": "Complete" }
        },
        "type": "object",
        "required": ["title", "content", "priority", "complete"],
        "title": "NoteUpdate",
        "example": {
          "complete": true,
          "content": "Learn Python programming language and its libraries.",
          "priority": 3,
          "title": "Learn Python"
        }
      },
      "Token": {
        "properties": {
          "access_token": { "type": "string", "title": "Access Token" },
          "token_type": { "type": "string", "title": "Token Type" }
        },
        "type": "object",
        "required": ["access_token", "token_type"],
        "title": "Token",
        "example": { "access_token": "string", "token_type": "bearer" }
      },
      "User": {
        "properties": {
          "first_name": { "type": "string", "title": "First Name" },
          "last_name": { "type": "string", "title": "Last Name" },
          "email": { "type": "string", "title": "Email" },
          "id": { "type": "integer", "title": "Id" },
          "username": { "type": "string", "title": "Username" },
          "is_active": { "type": "boolean", "title": "Is Active" },
          "admin": { "type": "boolean", "title": "Admin" },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          }
        },
        "type": "object",
        "required": [
          "first_name",
          "last_name",
          "email",
          "id",
          "username",
          "is_active",
          "admin",
          "created_at"
        ],
        "title": "User",
        "example": {
          "admin": false,
          "created_at": "2024-03-10T18:33:02.306629",
          "email": "kevin@heart.com",
          "first_name": "Kevin",
          "id": 1,
          "is_active": true,
          "last_name": "Heart",
          "username": "kevinheart"
        }
      },
      "UserCreate": {
        "properties": {
          "first_name": {
            "type": "string",
            "minLength": 2,
            "title": "First Name"
          },
          "last_name": {
            "type": "string",
            "minLength": 2,
            "title": "Last Name"
          },
          "email": { "type": "string", "format": "email", "title": "Email" },
          "password": { "type": "string", "minLength": 8, "title": "Password" }
        },
        "type": "object",
        "required": ["first_name", "last_name", "email", "password"],
        "title": "UserCreate",
        "example": {
          "email": "kevin@heart.com",
          "first_name": "Kevin",
          "last_name": "Heart",
          "password": "hashed_password"
        }
      },
      "UserUpdate": {
        "properties": {
          "first_name": {
            "type": "string",
            "minLength": 2,
            "title": "First Name"
          },
          "last_name": {
            "type": "string",
            "minLength": 2,
            "title": "Last Name"
          },
          "email": { "type": "string", "format": "email", "title": "Email" },
          "username": { "type": "string", "minLength": 1, "title": "Username" },
          "is_active": { "type": "boolean", "title": "Is Active" }
        },
        "type": "object",
        "required": [
          "first_name",
          "last_name",
          "email",
          "username",
          "is_active"
        ],
        "title": "UserUpdate",
        "example": {
          "email": "donald@glover.com",
          "first_name": "Donald",
          "is_active": false,
          "last_name": "Glover",
          "username": "donaldglover"
        }
      },
      "UserUpdatePassword": {
        "properties": {
          "old_password": { "type": "string", "title": "Old Password" },
          "new_password": {
            "type": "string",
            "minLength": 8,
            "title": "New Password"
          },
          "confirm_new_password": {
            "type": "string",
            "minLength": 8,
            "title": "Confirm New Password"
          }
        },
        "type": "object",
        "required": ["old_password", "new_password", "confirm_new_password"],
        "title": "UserUpdatePassword",
        "example": {
          "confirm_new_password": "new_password",
          "new_password": "new_password",
          "old_password": "old_password"
        }
      },
      "ValidationError": {
        "properties": {
          "loc": {
            "items": { "anyOf": [{ "type": "string" }, { "type": "integer" }] },
            "type": "array",
            "title": "Location"
          },
          "msg": { "type": "string", "title": "Message" },
          "type": { "type": "string", "title": "Error Type" }
        },
        "type": "object",
        "required": ["loc", "msg", "type"],
        "title": "ValidationError"
      }
    },
    "securitySchemes": {
      "OAuth2PasswordBearer": {
        "type": "oauth2",
        "flows": { "password": { "scopes": {}, "tokenUrl": "auth/token" } }
      }
    }
  }
}
